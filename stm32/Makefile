##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.19.2] date: [Thu Sep 26 22:03:18 KST 2024]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = master-project


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
OPT = -Og


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# C sources
C_SOURCES =  \
Core/Src/stm32l5xx_it.c \
Core/Src/stm32l5xx_hal_msp.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_utils.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_exti.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_adc.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_adc_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_i2c.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_i2c_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_rcc.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_rcc_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_flash_ramfunc.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_gpio.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_dma.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_dma_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_exti.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_pwr.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_pwr_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_cortex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_icache.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_dfsdm.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_dfsdm_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_fmc.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_sram.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_uart.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_uart_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_ospi.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_sai.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_sai_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_sdmmc.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_sd.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_sd_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_spi.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_spi_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_tim.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_tim_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_ucpd.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_gpio.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_dma.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_pcd.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_hal_pcd_ex.c \
Drivers/STM32L5xx_HAL_Driver/Src/stm32l5xx_ll_usb.c \
Core/Src/system_stm32l5xx.c  

# ASM sources
ASM_SOURCES =  \
startup_stm32l562xx.s


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

LLVM_CC = clang
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m33

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_FULL_LL_DRIVER \
-DUSE_HAL_DRIVER \
-DSTM32L562xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32L5xx_HAL_Driver/Inc \
-IDrivers/STM32L5xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32L5xx/Include \
-IDrivers/CMSIS/Include


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

TARGET_TRIPLE = arm-none-eabi
GCC_ARM_PATH = /opt/arm-gnu-toolchain-13.3.rel1-x86_64-arm-none-eabi
LLVM_FLAGS = -O2 -emit-llvm -S --target=$(TARGET_TRIPLE) $(MCU) $(C_DEFS) $(C_INCLUDES)
LLVM_FLAGS += --sysroot=$(GCC_ARM_PATH)/arm-none-eabi --gcc-toolchain=$(GCC_ARM_PATH) -Wall -fdata-sections -ffunction-sections -fno-inline -fno-elide-constructors

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
LLVM_FLAGS += -gdwarf-2  -g 
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32L562xE_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# 단일 LLVM IR 파일 이름
LL_FILE = $(BUILD_DIR)/drivers.ll
LL_FILES = \
$(BUILD_DIR)/stm32l5xx_it.ll \
$(BUILD_DIR)/stm32l5xx_hal_msp.ll \
$(BUILD_DIR)/stm32l5xx_ll_utils.ll \
$(BUILD_DIR)/stm32l5xx_ll_exti.ll \
$(BUILD_DIR)/stm32l5xx_hal_adc.ll \
$(BUILD_DIR)/stm32l5xx_hal_adc_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal.ll \
$(BUILD_DIR)/stm32l5xx_hal_i2c.ll \
$(BUILD_DIR)/stm32l5xx_hal_i2c_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_rcc.ll \
$(BUILD_DIR)/stm32l5xx_hal_rcc_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_flash.ll \
$(BUILD_DIR)/stm32l5xx_hal_flash_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_flash_ramfunc.ll \
$(BUILD_DIR)/stm32l5xx_hal_gpio.ll \
$(BUILD_DIR)/stm32l5xx_hal_dma.ll \
$(BUILD_DIR)/stm32l5xx_hal_dma_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_exti.ll \
$(BUILD_DIR)/stm32l5xx_hal_pwr.ll \
$(BUILD_DIR)/stm32l5xx_hal_pwr_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_cortex.ll \
$(BUILD_DIR)/stm32l5xx_hal_icache.ll \
$(BUILD_DIR)/stm32l5xx_hal_dfsdm.ll \
$(BUILD_DIR)/stm32l5xx_hal_dfsdm_ex.ll \
$(BUILD_DIR)/stm32l5xx_ll_fmc.ll \
$(BUILD_DIR)/stm32l5xx_hal_sram.ll \
$(BUILD_DIR)/stm32l5xx_hal_uart.ll \
$(BUILD_DIR)/stm32l5xx_hal_uart_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_ospi.ll \
$(BUILD_DIR)/stm32l5xx_hal_sai.ll \
$(BUILD_DIR)/stm32l5xx_hal_sai_ex.ll \
$(BUILD_DIR)/stm32l5xx_ll_sdmmc.ll \
$(BUILD_DIR)/stm32l5xx_hal_sd.ll \
$(BUILD_DIR)/stm32l5xx_hal_sd_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_spi.ll \
$(BUILD_DIR)/stm32l5xx_hal_spi_ex.ll \
$(BUILD_DIR)/stm32l5xx_hal_tim.ll \
$(BUILD_DIR)/stm32l5xx_hal_tim_ex.ll \
$(BUILD_DIR)/stm32l5xx_ll_ucpd.ll \
$(BUILD_DIR)/stm32l5xx_ll_gpio.ll \
$(BUILD_DIR)/stm32l5xx_ll_dma.ll \
$(BUILD_DIR)/stm32l5xx_hal_pcd.ll \
$(BUILD_DIR)/stm32l5xx_hal_pcd_ex.ll \
$(BUILD_DIR)/stm32l5xx_ll_usb.ll \
$(BUILD_DIR)/system_stm32l5xx.ll \

APPLICATION_LL_FILES = $(BUILD_DIR)/main.ll 
APPLICATION_C_SOURCES = Core/Src/main.c \
# default action: build all
all: $(LL_FILE)
direct: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))


# $(LL_FILE): $(C_SOURCES)| $(BUILD_DIR)
# 	$(LLVM_CC)  $(LLVM_FLAGS) $< -o $@

$(BUILD_DIR)/%.ll: %.c Makefile | $(BUILD_DIR) 
	$(LLVM_CC) $(LLVM_FLAGS) -emit-llvm -c $< -o $@

# 모든 .ll 파일을 링크하여 output.ll 생성
$(LL_FILE): $(LL_FILES)
	llvm-link -o drivers.ll $(LL_FILES) 
	$(LLVM_CC) $(LLVM_FLAGS) -emit-llvm -c ${APPLICATION_C_SOURCES} -o ${APPLICATION_LL_FILES}

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@


$(BUILD_DIR)/%.bc: %.c Makefile | $(BUILD_DIR)
	$(CC) -emit-llvm -c $(CFLAGS) $< -o $@


$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***